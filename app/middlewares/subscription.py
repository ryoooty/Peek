from __future__ import annotations

from aiogram import BaseMiddleware
from aiogram.types import TelegramObject, Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from app.config import settings


class SubscriptionGateMiddleware(BaseMiddleware):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π, –∫—Ä–æ–º–µ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥ –∏ –∞–¥–º–∏–Ω–æ–≤.
    –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º –∫–∞–Ω–∞–ª–∞.
    """

    async def __call__(self, handler, event: TelegramObject, data):
        channel_id = settings.sub_channel_id
        if not channel_id:
            return await handler(event, data)

        user_id = None
        is_command = False
        chat_id = None

        if isinstance(event, Message):
            user_id = event.from_user.id if event.from_user else None
            chat_id = event.chat.id
            is_command = (event.text or "").startswith("/")
        elif isinstance(event, CallbackQuery):
            user_id = event.from_user.id if event.from_user else None
            chat_id = event.message.chat.id if event.message else None
            is_command = False

        if not user_id:
            return await handler(event, data)

        if user_id in settings.admin_ids:
            return await handler(event, data)

        if is_command:
            return await handler(event, data)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        try:
            member = await data["bot"].get_chat_member(chat_id=channel_id, user_id=user_id)
            status = getattr(member, "status", "left")
            ok = status in ("member", "administrator", "creator")
        except Exception:
            ok = True  # –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –≤–∏–¥–µ—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å UX

        if ok:
            return await handler(event, data)

        # –ü–æ–∫–∞–∑–∞—Ç—å –≥–µ–π—Ç
        url = None
        if settings.sub_channel_username:
            url = f"https://t.me/{settings.sub_channel_username.lstrip('@')}"
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì£ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", url=url or "https://t.me")],
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="gate:check")],
        ])
        if isinstance(event, Message):
            await event.answer("–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=kb)
        elif isinstance(event, CallbackQuery):
            await event.message.edit_text("–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=kb)
            await event.answer()
        return
