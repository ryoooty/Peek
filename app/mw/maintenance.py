# app/mw/maintenance.py
from __future__ import annotations

from typing import Any, Callable, Awaitable, Optional, Iterable

from aiogram import BaseMiddleware
from aiogram.types import Message, CallbackQuery, Update

from app.config import settings


def _is_admin(user_id: Optional[int]) -> bool:
    try:
        if user_id is None:
            return False
        return int(user_id) in {int(x) for x in (settings.admin_ids or [])}
    except Exception:
        return False


class MaintenanceMiddleware(BaseMiddleware):
    """
    –í —Ä–µ–∂–∏–º–µ —Ç–µ—Ö—Ä–∞–±–æ—Ç:
      - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã (/start, /help, /balance, ...);
      - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å—ë –æ—Ç –∞–¥–º–∏–Ω–æ–≤;
      - –≥–∞—Å–∏–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ.
    –î–ª—è –Ω–µ-Message –∞–ø–¥–µ–π—Ç–æ–≤ (callback –∏ –ø—Ä.) –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º alert'–æ–º.
    """

    async def __call__(
        self,
        handler: Callable[[Update, dict[str, Any]], Awaitable[Any]],
        event: Update,  # —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ç–∏–ø ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –∞–ø–¥–µ–π—Ç–∞ (Message, CallbackQuery, ...)
        data: dict[str, Any],
    ) -> Any:
        # –ï—Å–ª–∏ —Ç–µ—Ö—Ä–∞–±–æ—Ç –Ω–µ—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å—ë
        if not settings.maintenance_mode:
            return await handler(event, data)

        # Message: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∞–¥–º–∏–Ω–æ–≤
        if isinstance(event, Message):
            uid = event.from_user.id if event.from_user else None
            if _is_admin(uid):
                return await handler(event, data)
            text = event.text or event.caption or ""
            if isinstance(text, str) and text.startswith("/"):
                # —ç—Ç–æ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                return await handler(event, data)
            # –≥–∞—Å–∏–º –ø—Ä–æ—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            try:
                await event.answer("üõ† –°–µ–π—á–∞—Å –∏–¥—É—Ç —Ç–µ—Ö—Ä–∞–±–æ—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            except Exception:
                pass
            return

        # CallbackQuery: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–æ–≤, –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≥–∞—Å–∏–º
        if isinstance(event, CallbackQuery):
            uid = event.from_user.id if event.from_user else None
            if _is_admin(uid):
                return await handler(event, data)
            try:
                await event.answer("üõ† –¢–µ—Ö—Ä–∞–±–æ—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)
            except Exception:
                pass
            return

        # –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –∞–ø–¥–µ–π—Ç–æ–≤ ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–æ–≤
        try:
            uid = getattr(getattr(event, "from_user", None), "id", None)
        except Exception:
            uid = None
        if _is_admin(uid):
            return await handler(event, data)
        # –ò–Ω–∞—á–µ ‚Äî —Ç–∏—Ö–æ –≥–∞—Å–∏–º
        return
